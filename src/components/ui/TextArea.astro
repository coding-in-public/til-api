---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"textarea"> & {
  label?: string;
  error?: string;
};

const { label, error, rows = 4, cols = 30, ...rest } = Astro.props;

const sluggedLabel = label?.toLowerCase().replace(" ", "-");
---

<div class="flex flex-col gap-1">
  {label && <label class="text-sm font-medium text-gray-700">{label}</label>}
  <textarea
    name={sluggedLabel}
    rows={rows}
    cols={cols}
    class:list={[
      "rounded-md border border-gray-300 px-3 py-2",
      "focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500",
      error && "border-red-500",
    ]}
    aria-describedby={error ? `${sluggedLabel}-error` : undefined}
    {...rest}></textarea>
  <p
    class={`text-sm text-red-500 ${error ? "block" : "hidden"}`}
    id={`${sluggedLabel}-error`}
  >
    {error}
  </p>
</div>

<script>
  const textAreas = document.querySelectorAll(
    "textarea"
  ) as NodeListOf<HTMLTextAreaElement>;
  textAreas.forEach((textarea) => {
    textarea.addEventListener("blur", () => {
      textarea.classList.remove("border-red-500");
      const errorElement = document.getElementById(`${textarea.name}-error`);
      if (errorElement) {
        errorElement.classList.add("hidden");
        errorElement.textContent = "";
        errorElement.classList.remove("block");
      }
    });
  });
</script>
